{"version":3,"file":"domain.service.js","sourceRoot":"","sources":["../../src/app/shared/domain.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAmB,eAAe,CAAC,CAAA;AACnC,0BAAwB,aAAa,CAAC,CAAA;AAGtC;IAoBE,uBAAoB,KAAU;QApBhC,iBAyDC;QArCqB,UAAK,GAAL,KAAK,CAAK;QAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,qBAAS,CAAC,eAAe,GAAC,0BAA0B,CAAC;aACzD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,SAAS,CACR,UAAA,IAAI,IAAG,OAAA,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,KAAK,GAAC,IAAI,EAApD,CAAoD,CAC5D,CAAC;QACZ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,qBAAS,CAAC,eAAe,GAAC,0BAA0B,CAAC;aACzD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,SAAS,CACR,UAAA,IAAI,IAAG,OAAA,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,KAAK,GAAC,IAAI,EAArD,CAAqD,CAC7D,CAAC;QACZ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,qBAAS,CAAC,eAAe,GAAC,WAAW,CAAC;aAC1C,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,SAAS,CACR,UAAA,IAAI,IAAG,OAAA,KAAI,CAAC,IAAI,GAAI,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,KAAK,GAAC,IAAI,EAAvC,CAAuC,CAC/C,CAAC;QACZ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,qBAAS,CAAC,eAAe,GAAC,oBAAoB,CAAC;aACnD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,SAAS,CACR,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,KAAK,GAAC,IAAI,EAA3C,CAA2C,CACpD,CAAC;QACZ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,qBAAS,CAAC,eAAe,GAAC,mBAAmB,CAAC;aAClD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,SAAS,CACR,UAAA,IAAI,IAAG,OAAA,KAAI,CAAC,OAAO,GAAI,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,KAAK,GAAC,IAAI,EAA1C,CAA0C,CAClD,CAAC;IACd,CAAC;IAtCK,+BAAO,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEM,mCAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,kCAAU,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IA8BO,4CAAoB,GAA3B;QACE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAEM,6CAAqB,GAA5B;QACE,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAvDH;QAAC,iBAAU,EAAE;;qBAAA;IA0Db,oBAAC;AAAD,CAAC,AAzDD,IAyDC;AAzDY,qBAAa,gBAyDzB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {Http} from '@angular/http';\r\nimport {endpoints} from './endpoints';\r\n\r\n@Injectable()\r\nexport class DomainService {\r\n  \r\n  private STRATEGIC_AUDIENCE:string[];\r\n  private BUSINESS_OBJECTIVES:string[];\r\n  private KPIS:string[];\r\n  private PRODUCTS:string[];\r\n  private CLIENTS:string[];\r\n\r\n public getKPIS() {\r\n   return this.KPIS;\r\n }\r\n \r\n public getProducts() {\r\n   return this.PRODUCTS;\r\n }\r\n \r\n public getClients() {\r\n   return this.CLIENTS;\r\n }\r\n \r\n  constructor(private _http:Http) {\r\n    this._http.get(endpoints.GET_DOMAIN_DATA+\"?name=Strategic Audience\")\r\n              .map(res => res.json())\r\n              .subscribe(\r\n                data =>this.STRATEGIC_AUDIENCE = data.names?data.names:data\r\n              );\r\n    this._http.get(endpoints.GET_DOMAIN_DATA+\"?name=Business Objective\")\r\n              .map(res => res.json())\r\n              .subscribe(\r\n                data =>this.BUSINESS_OBJECTIVES = data.names?data.names:data\r\n              );\r\n    this._http.get(endpoints.GET_DOMAIN_DATA+\"?name=KPI\")\r\n              .map(res => res.json())\r\n              .subscribe(\r\n                data =>this.KPIS =  data.names?data.names:data\r\n              );\r\n    this._http.get(endpoints.GET_DOMAIN_DATA+\"?name=Product Name\")\r\n              .map(res => res.json())\r\n              .subscribe(\r\n                data => this.PRODUCTS =  data.names?data.names:data\r\n              );\r\n    this._http.get(endpoints.GET_DOMAIN_DATA+\"?name=Client Name\")\r\n              .map(res => res.json())\r\n              .subscribe(\r\n                data =>this.CLIENTS =  data.names?data.names:data\r\n              );\r\n  }\r\n  \r\n  public getStrategicAudience() {\r\n    return this.STRATEGIC_AUDIENCE;\r\n  }\r\n  \r\n  public getBusinessObjectives() {\r\n    return this.BUSINESS_OBJECTIVES;\r\n  }\r\n  \r\n\r\n}\r\n"]}